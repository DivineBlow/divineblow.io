{"version":3,"sources":["js/utils.js","js/menu.js"],"names":["ease","exponentialIn","t","Math","pow","exponentialOut","exponentialInOut","sineOut","sin","circularInOut","sqrt","cubicIn","cubicOut","f","cubicInOut","quadraticOut","quarticOut","scrollToTopBtn","document","querySelector","rootElement","documentElement","handleScroll","scrollTotal","scrollHeight","clientHeight","scrollTop","classList","add","remove","scrollToTop","scrollTo","top","behavior","addEventListener","ShapeOverlays","elm","path","querySelectorAll","numPoints","duration","delayPointsArray","delayPointsMax","delayPerPath","timeStart","Date","now","isOpened","isAnimating","i","open","close","renderLoop","time","points","thisEase","min","max","str","p","cp","length","setAttribute","updatePath","render","requestAnimationFrame","elmHamburger","gNavItems","elmOverlay","overlay","toggle","body"],"mappings":"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","file":"menu.42e23368.js","sourceRoot":"..","sourcesContent":["//\n// ease function for ShapeOverlays\n//\n\nconst ease = {\n    exponentialIn: (t) => {\n      return t == 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n    },\n    exponentialOut: (t) => {\n      return t == 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n    },\n    exponentialInOut: (t) => {\n      return t == 0.0 || t == 1.0\n        ? t\n        : t < 0.5\n          ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n          : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0;\n    },\n    sineOut: (t) => {\n      const HALF_PI = 1.5707963267948966;\n      return Math.sin(t * HALF_PI);\n    },\n    circularInOut: (t) => {\n      return t < 0.5\n          ? 0.5 * (1.0 - Math.sqrt(1.0 - 4.0 * t * t))\n          : 0.5 * (Math.sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\n    },\n    cubicIn: (t) => {\n      return t * t * t;\n    },\n    cubicOut: (t) => {\n      const f = t - 1.0;\n      return f * f * f + 1.0;\n    },\n    cubicInOut: (t) => {\n      return t < 0.5\n        ? 4.0 * t * t * t\n        : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n    },\n    quadraticOut: (t) => {\n      return -t * (t - 2.0);\n    },\n    quarticOut: (t) => {\n      return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n    },\n  }\n\nexport {\n    ease,\n};\n\n","import {ease} from './utils'\n\n// Scroll-to-Top\nlet scrollToTopBtn = document.querySelector(\".scrollToTopBtn\");\nlet rootElement = document.documentElement;\n\nfunction handleScroll() {\n  // Do something on scroll\n  let scrollTotal = rootElement.scrollHeight - rootElement.clientHeight;\n  if (rootElement.scrollTop / scrollTotal > 0.4) {\n    // Show button\n    scrollToTopBtn.classList.add(\"showBtn\");\n  } else {\n    // Hide button\n    scrollToTopBtn.classList.remove(\"showBtn\");\n  }\n}\n\nfunction scrollToTop() {\n  // Scroll to top logic\n  rootElement.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n}\nscrollToTopBtn.addEventListener(\"click\", scrollToTop);\ndocument.addEventListener(\"scroll\", handleScroll);\n\nclass ShapeOverlays {\n  constructor(elm) {\n    this.elm = elm;\n    this.path = elm.querySelectorAll('path');\n    this.numPoints = 2;\n    this.duration = 600;\n    this.delayPointsArray = [];\n    this.delayPointsMax = 0;\n    this.delayPerPath = 200;\n    this.timeStart = Date.now();\n    this.isOpened = false;\n    this.isAnimating = false;\n  }\n  toggle() {\n    this.isAnimating = true;\n    for (var i = 0; i < this.numPoints; i++) {\n      this.delayPointsArray[i] = 0;\n    }\n    if (this.isOpened === false) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n  open() {\n    this.isOpened = true;\n    this.elm.classList.add('is-opened');\n    this.timeStart = Date.now();\n    this.renderLoop();\n  }\n  close() {\n    this.isOpened = false;\n    this.elm.classList.remove('is-opened');\n    this.timeStart = Date.now();\n    this.renderLoop();\n  }\n  updatePath(time) {\n    const points = [];\n    for (var i = 0; i < this.numPoints; i++) {\n      const thisEase = this.isOpened ? \n                        (i == 1) ? ease.cubicOut : ease.cubicInOut:\n                        (i == 1) ? ease.cubicInOut : ease.cubicOut;\n      points[i] = thisEase(Math.min(Math.max(time - this.delayPointsArray[i], 0) / this.duration, 1)) * 100\n    }\n\n    let str = '';\n    str += (this.isOpened) ? `M 0 0 V ${points[0]} ` : `M 0 ${points[0]} `;\n    for (var i = 0; i < this.numPoints - 1; i++) {\n      const p = (i + 1) / (this.numPoints - 1) * 100;\n      const cp = p - (1 / (this.numPoints - 1) * 100) / 2;\n      str += `C ${cp} ${points[i]} ${cp} ${points[i + 1]} ${p} ${points[i + 1]} `;\n    }\n    str += (this.isOpened) ? `V 0 H 0` : `V 100 H 0`;\n    return str;\n  }\n  render() {\n    if (this.isOpened) {\n      for (var i = 0; i < this.path.length; i++) {\n        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * i)));\n      }\n    } else {\n      for (var i = 0; i < this.path.length; i++) {\n        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * (this.path.length - i - 1))));\n      }\n    }\n  }\n  renderLoop() {\n    this.render();\n    if (Date.now() - this.timeStart < this.duration + this.delayPerPath * (this.path.length - 1) + this.delayPointsMax) {\n      requestAnimationFrame(() => {\n        this.renderLoop();\n      });\n    }\n    else {\n      this.isAnimating = false;\n    }\n  }\n}\n\n\n(function() {\n  const elmHamburger = document.querySelector('.hamburger');\n  const gNavItems = document.querySelectorAll('.global-menu__item');\n  const elmOverlay = document.querySelector('.shape-overlays');\n  const overlay = new ShapeOverlays(elmOverlay);\n\n  elmHamburger.addEventListener('click', () => {\n    if (overlay.isAnimating) {\n      return false;\n    }\n    overlay.toggle();\n    if (overlay.isOpened === true) {\n      elmHamburger.classList.add('is-opened-navi');\n      document.body.classList.add('preview-open');\n      for (var i = 0; i < gNavItems.length; i++) {\n        gNavItems[i].classList.add('is-opened');\n      }\n    } else {\n      elmHamburger.classList.remove('is-opened-navi');\n      document.body.classList.remove('preview-open');\n      for (var i = 0; i < gNavItems.length; i++) {\n        gNavItems[i].classList.remove('is-opened');\n      }\n    }\n  });\n}());\n"]}