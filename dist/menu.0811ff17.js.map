{"version":3,"sources":["js/utils.js","js/menu.js"],"names":["preloadFonts","id","Promise","resolve","WebFont","load","typekit","active","randomNumber","min","max","Math","floor","random","ease","exponentialIn","t","pow","exponentialOut","exponentialInOut","sineOut","sin","circularInOut","sqrt","cubicIn","cubicOut","f","cubicInOut","quadraticOut","quarticOut","ShapeOverlays","elm","path","querySelectorAll","numPoints","duration","delayPointsArray","delayPointsMax","delayPerPath","timeStart","Date","now","isOpened","isAnimating","i","open","close","classList","add","renderLoop","remove","time","points","thisEase","str","p","cp","length","setAttribute","updatePath","render","requestAnimationFrame","elmHamburger","document","querySelector","gNavItems","elmOverlay","overlay","addEventListener","toggle","body"],"mappings":"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","file":"menu.0811ff17.js","sourceRoot":"..","sourcesContent":["// Preload fonts\nconst preloadFonts = (id) => {\n    return new Promise((resolve) => {\n        WebFont.load({\n            typekit: {\n                id: id\n            },\n            active: resolve\n        });\n    });\n};\n\n// \n// randomNumber for Intro\n// \n\nconst randomNumber = (min,max) => Math.floor(Math.random() * (max - min + 1) + min);\n\n//\n// ease function for ShapeOverlays\n//\n\nconst ease = {\n    exponentialIn: (t) => {\n      return t == 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n    },\n    exponentialOut: (t) => {\n      return t == 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n    },\n    exponentialInOut: (t) => {\n      return t == 0.0 || t == 1.0\n        ? t\n        : t < 0.5\n          ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n          : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0;\n    },\n    sineOut: (t) => {\n      const HALF_PI = 1.5707963267948966;\n      return Math.sin(t * HALF_PI);\n    },\n    circularInOut: (t) => {\n      return t < 0.5\n          ? 0.5 * (1.0 - Math.sqrt(1.0 - 4.0 * t * t))\n          : 0.5 * (Math.sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\n    },\n    cubicIn: (t) => {\n      return t * t * t;\n    },\n    cubicOut: (t) => {\n      const f = t - 1.0;\n      return f * f * f + 1.0;\n    },\n    cubicInOut: (t) => {\n      return t < 0.5\n        ? 4.0 * t * t * t\n        : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n    },\n    quadraticOut: (t) => {\n      return -t * (t - 2.0);\n    },\n    quarticOut: (t) => {\n      return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n    },\n  }\n\nexport {\n    preloadFonts,\n    randomNumber,\n    ease,\n};\n\n","import {ease} from './utils'\n\nclass ShapeOverlays {\n  constructor(elm) {\n    this.elm = elm;\n    this.path = elm.querySelectorAll('path');\n    this.numPoints = 2;\n    this.duration = 600;\n    this.delayPointsArray = [];\n    this.delayPointsMax = 0;\n    this.delayPerPath = 200;\n    this.timeStart = Date.now();\n    this.isOpened = false;\n    this.isAnimating = false;\n  }\n  toggle() {\n    this.isAnimating = true;\n    for (var i = 0; i < this.numPoints; i++) {\n      this.delayPointsArray[i] = 0;\n    }\n    if (this.isOpened === false) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n  open() {\n    this.isOpened = true;\n    this.elm.classList.add('is-opened');\n    this.timeStart = Date.now();\n    this.renderLoop();\n  }\n  close() {\n    this.isOpened = false;\n    this.elm.classList.remove('is-opened');\n    this.timeStart = Date.now();\n    this.renderLoop();\n  }\n  updatePath(time) {\n    const points = [];\n    for (var i = 0; i < this.numPoints; i++) {\n      const thisEase = this.isOpened ? \n                        (i == 1) ? ease.cubicOut : ease.cubicInOut:\n                        (i == 1) ? ease.cubicInOut : ease.cubicOut;\n      points[i] = thisEase(Math.min(Math.max(time - this.delayPointsArray[i], 0) / this.duration, 1)) * 100\n    }\n\n    let str = '';\n    str += (this.isOpened) ? `M 0 0 V ${points[0]} ` : `M 0 ${points[0]} `;\n    for (var i = 0; i < this.numPoints - 1; i++) {\n      const p = (i + 1) / (this.numPoints - 1) * 100;\n      const cp = p - (1 / (this.numPoints - 1) * 100) / 2;\n      str += `C ${cp} ${points[i]} ${cp} ${points[i + 1]} ${p} ${points[i + 1]} `;\n    }\n    str += (this.isOpened) ? `V 0 H 0` : `V 100 H 0`;\n    return str;\n  }\n  render() {\n    if (this.isOpened) {\n      for (var i = 0; i < this.path.length; i++) {\n        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * i)));\n      }\n    } else {\n      for (var i = 0; i < this.path.length; i++) {\n        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * (this.path.length - i - 1))));\n      }\n    }\n  }\n  renderLoop() {\n    this.render();\n    if (Date.now() - this.timeStart < this.duration + this.delayPerPath * (this.path.length - 1) + this.delayPointsMax) {\n      requestAnimationFrame(() => {\n        this.renderLoop();\n      });\n    }\n    else {\n      this.isAnimating = false;\n    }\n  }\n}\n\n\n(function() {\n  const elmHamburger = document.querySelector('.hamburger');\n  const gNavItems = document.querySelectorAll('.global-menu__item');\n  const elmOverlay = document.querySelector('.shape-overlays');\n  const overlay = new ShapeOverlays(elmOverlay);\n\n  elmHamburger.addEventListener('click', () => {\n    if (overlay.isAnimating) {\n      return false;\n    }\n    overlay.toggle();\n    if (overlay.isOpened === true) {\n      elmHamburger.classList.add('is-opened-navi');\n      document.body.classList.add('preview-open');\n      for (var i = 0; i < gNavItems.length; i++) {\n        gNavItems[i].classList.add('is-opened');\n      }\n    } else {\n      elmHamburger.classList.remove('is-opened-navi');\n      document.body.classList.remove('preview-open');\n      for (var i = 0; i < gNavItems.length; i++) {\n        gNavItems[i].classList.remove('is-opened');\n      }\n    }\n  });\n}());\n"]}